import{s as bl,a as js,e as yl,n as gl}from"../chunks/scheduler.FGUOCI5T.js";import{S as wl,i as kl,k as Tl,l as Ll,m as Pl,n as Hl,o as Ml,p as Sl,e as p,s as F,H as E,c as e,q as t,f as o,r as d,u as Ds,g as a,d as n}from"../chunks/index.TPYxZWDS.js";import{P as ql,g as Bl,a as Dl}from"../chunks/post_layout.B32RYzS7.js";function Rl(z){let c,A="My writeup on Akasec CTF on the challs solved by my team ‘Bits & Pieces’ and we placed rank 13th on this ctf event, it was a pretty good run this time!",v,y,r='<a href="#crypto">Crypto:</a>',D,i,$s='<a href="#lost">Lost</a>',is,m,Gs="In the given code:",Es,O,El=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> random </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> getrandbits</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> Crypto</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Util</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">number </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> getPrime</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> bytes_to_long</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> SECRET </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> FLAG</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">e </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">2</span></div><div class='line'><span style="color: #EEFFFF">p </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">getPrime</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">256</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">q </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">getPrime</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">256</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">n </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> p </span><span style="color: #89DDFF">*</span><span style="color: #EEFFFF"> q</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">m </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">bytes_to_long</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">FLAG</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">cor_m </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> m </span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">getrandbits</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">160</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> __name__ </span><span style="color: #89DDFF">==</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">__main__</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">    c </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">pow</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">m</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> e</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> n</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">n = &#123;&#125;</span><span style="color: #EEFFFF">&#92;n</span><span style="color: #C3E88D">c = &#123;&#125;</span><span style="color: #EEFFFF">&#92;n</span><span style="color: #C3E88D">cor_m = &#123;&#125;</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">format</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">n</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> c</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> cor_m</span><span style="color: #89DDFF">))</span></div></code></div></pre>`,U,_,Ks="We can identify that the <code>getrandbits(160)</code> is a small range and we can exploit this vulnerablility using the “Coppersmith’s Attack” which helps us to find the potential value to decrypt the flag.",ds,W,dl=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">m</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">724154397787031699242933363312913323086319394176220093419616667612889538090840511506381320998293481458429167685676367015744314015744</span></div><div class='line'><span style="color: #EEFFFF">n</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">5113166966960118603250666870544315753374750136060769465485822149528706374700934720443689630473991177661169179462100732951725871457633686010946951736764639</span></div><div class='line'><span style="color: #EEFFFF">e</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">2</span></div><div class='line'><span style="color: #EEFFFF">c</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">329402637167950119278220170950190680807120980712143610290182242567212843996710001488280098771626903975534140478814872389359418514658167263670496584963653</span></div><div class='line'><span style="color: #EEFFFF">P</span><span style="color: #89DDFF">.&lt;</span><span style="color: #EEFFFF">x</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">PolynomialRing</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">Zmod</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">n</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #EEFFFF">implementation</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">NTL</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">pol </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">m </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> x</span><span style="color: #89DDFF">)**</span><span style="color: #F78C6C">2</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF"> c</span></div><div class='line'><span style="color: #EEFFFF">roots </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> pol</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">small_roots</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">epsilon</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">/</span><span style="color: #F78C6C">50</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Potential solutions:</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #89DDFF">for</span><span style="color: #EEFFFF"> root </span><span style="color: #89DDFF">in</span><span style="color: #EEFFFF"> roots</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">      a </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> root</span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF">m</span></div><div class='line'><span style="color: #EEFFFF">      </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">root</span><span style="color: #89DDFF">+</span><span style="color: #82AAFF">m</span><span style="color: #89DDFF">)</span></div></code></div></pre>`,Z,h,Is="Here the code attempts to find small roots of the polynomial using the small_roots method with an epsilon value of 1/50. The small_roots method is used to find roots of a polynomial where the roots are known to be small relative to the modulus n.",vs,N,vl=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">roots </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> pol</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">small_roots</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">epsilon</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">/</span><span style="color: #F78C6C">50</span><span style="color: #89DDFF">)</span></div></code></div></pre>`,V,x,zs="Then we iterate through the found roots, add each root to m, and prints the result. The addition of m to each root is done because the polynomial was defined as (m+x), so the roots found are offsets from m.",As,b,Os="The encryption operation for RSA with exponent e can be written as: c = (m+k)<sup>2</sup> mod n",Cs,g,Us="where k is some small value. The polynomial (m+x)<sup>2</sup> - c is constructed and the small roots method is used to find the possible values of k. By adding these roots back to m, the code attempts to recover the original plaintext m.",fs,w,Ws="Flag: <code>AKASEC{c0pp3r5m17h_4774ck_1n_1ov3_w17h_5m4ll_3xp0n3nts}</code>",us,C,Zs='<a href="#power-over-all">Power Over All</a>',ms,k,Ns="meow",_s,f,Vs='<a href="#twin">Twin</a>',hs,T,Js="In the given code:",xs,J,Al=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> Crypto</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Util</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">number </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> getPrime</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> bytes_to_long</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> long_to_bytes</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> SECRET </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> FLAG</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">e </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">5</span></div><div class='line'><span style="color: #EEFFFF">p </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">getPrime</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">256</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">q </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">getPrime</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">256</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">n </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> p </span><span style="color: #89DDFF">*</span><span style="color: #EEFFFF"> q</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">m1 </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">bytes_to_long</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">FLAG</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">m2 </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> m1 </span><span style="color: #89DDFF">&gt;&gt;</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">8</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> __name__ </span><span style="color: #89DDFF">==</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">__main__</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">    c1</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> c2 </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">pow</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">m1</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> e</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> n</span><span style="color: #89DDFF">),</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">pow</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">m2</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> e</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> n</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">n = &#123;&#125;</span><span style="color: #EEFFFF">&#92;n</span><span style="color: #C3E88D">c1 = &#123;&#125;</span><span style="color: #EEFFFF">&#92;n</span><span style="color: #C3E88D">c2 = &#123;&#125;</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">format</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">n</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> c1</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> c2</span><span style="color: #89DDFF">))</span></div></code></div></pre>`,Q,L,Qs="We need to exploit a specific relationship between the plaintext messages encrypted as c1 and c2 under the same RSA modulus and small exponent e=5. To find the missing value of the encrypted flag, let’s say ‘k’, It iterates over potential values of k, calculates the GCD of the resulting polynomials, and checks for non-trivial solutions that can be used to derive the plaintext.",bs,X,Cl=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">e</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">5</span></div><div class='line'><span style="color: #EEFFFF">n</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">6689395968128828819066313568755352659933786163958960509093076953387786003094796620023245908431378798689402141767913187865481890531897380982752646248371131</span></div><div class='line'><span style="color: #EEFFFF">c1</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">3179086897466915481381271626207192941491642866779832228649829433228467288272857233211003674026630320370606056763863577418383068472502537763155844909495261</span></div><div class='line'><span style="color: #EEFFFF">c2</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">6092690907728422411002652306266695413630015459295863614266882891010434275671526748292477694364341702119123311030726985363936486558916833174742155473021704</span></div><div class='line'><span style="color: #EEFFFF">n1</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">n</span></div><div class='line'><span style="color: #EEFFFF">n2</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">n</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">my_gcd</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">a</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> b</span><span style="color: #89DDFF">):</span><span style="color: #EEFFFF"> </span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> a</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">monic</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> b </span><span style="color: #89DDFF">==</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">0</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">else</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">my_gcd</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">b</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> a </span><span style="color: #89DDFF">%</span><span style="color: #82AAFF"> b</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">R</span><span style="color: #89DDFF">.&lt;</span><span style="color: #EEFFFF">m2</span><span style="color: #89DDFF">&gt;=</span><span style="color: #82AAFF">Zmod</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">n</span><span style="color: #89DDFF">)[]</span></div><div class='line'><span style="color: #89DDFF">for</span><span style="color: #EEFFFF"> k </span><span style="color: #89DDFF">in</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">range</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">256</span><span style="color: #89DDFF">):</span></div><div class='line'><span style="color: #EEFFFF">   f1</span><span style="color: #89DDFF">=(</span><span style="color: #EEFFFF">m2</span><span style="color: #89DDFF">*</span><span style="color: #F78C6C">256</span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF">k</span><span style="color: #89DDFF">)^</span><span style="color: #EEFFFF">e</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">c1</span></div><div class='line'><span style="color: #EEFFFF">   f2</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">m2</span><span style="color: #89DDFF">^</span><span style="color: #EEFFFF">e</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">c2</span></div><div class='line'><span style="color: #EEFFFF">   </span><span style="color: #89DDFF">if</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">my_gcd</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">f1</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> f2</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">coefficients</span><span style="color: #89DDFF">()[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">]</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">!=</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">):</span><span style="color: #EEFFFF"> </span><span style="color: #546E7A"># finds the potential</span></div><div class='line'><span style="color: #EEFFFF">        res </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">my_gcd</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">f1</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> f2</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">small_roots</span><span style="color: #89DDFF">()[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">]</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">*</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">256</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> k </span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">long_to_bytes</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">Integer</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">res</span><span style="color: #89DDFF">)))</span><span style="color: #EEFFFF"> </span><span style="color: #546E7A"># prints the flag</span></div></code></div></pre>`,Y,P,Xs="If the leading coefficient of the GCD is not 1, it indicates a potential value which was at iteration 125 which converts to the ascii value <code>}</code>. Then uses the small_roots method to find the potential message.",gs,ss,fl=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">   </span><span style="color: #89DDFF">if</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">my_gcd</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">f1</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> f2</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">coefficients</span><span style="color: #89DDFF">()[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">]</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">!=</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">):</span><span style="color: #EEFFFF"> </span><span style="color: #546E7A"># finds the potential</span></div></code></div></pre>`,ls,H,Ys="The message is converted into a readable format, and prints it.",ws,M,sl="Flag: <code>AKASEC{be_on_the_right_side_of_history_free_palestine}</code>",ks,u,ll='<a href="#my-calculus-lab">My Calculus Lab</a>',Ts,S,al="In the given code:",Ls,as,ul=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> Crypto</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Cipher </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> AES</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> Crypto</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Util</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Padding </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> pad</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> hashlib</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> sympy </span><span style="color: #89DDFF">as</span><span style="color: #EEFFFF"> sp</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> random</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">FLAG </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">b</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">REDACTED</span><span style="color: #89DDFF">'</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">key </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> random</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getrandbits</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">7</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">x </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> sp</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">symbols</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">x</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">f </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">REDACTED</span><span style="color: #89DDFF">"</span></div><div class='line'><span style="color: #EEFFFF">f_prime </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">REDACTED</span><span style="color: #89DDFF">"</span></div><div class='line'><span style="color: #EEFFFF">f_second_prime </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">REDACTED</span><span style="color: #89DDFF">"</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">assert</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">*</span><span style="color: #EEFFFF">f_second_prime </span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">6</span><span style="color: #89DDFF">*</span><span style="color: #EEFFFF">f_prime </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">*</span><span style="color: #EEFFFF">f </span><span style="color: #89DDFF">==</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #89DDFF">assert</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">f</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subs</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">|</span><span style="color: #EEFFFF"> f_prime</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subs</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">==</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">encrypt</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">message</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> key</span><span style="color: #89DDFF">):</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">global</span><span style="color: #EEFFFF"> f</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">global</span><span style="color: #EEFFFF"> x</span></div><div class='line'><span style="color: #EEFFFF">    point </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> f</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subs</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> key</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">evalf</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    point_hash </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> hashlib</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sha256</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">point</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">encode</span><span style="color: #89DDFF">()).</span><span style="color: #82AAFF">digest</span><span style="color: #89DDFF">()[:</span><span style="color: #F78C6C">16</span><span style="color: #89DDFF">]</span></div><div class='line'><span style="color: #EEFFFF">    cipher </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> AES</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">new</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">point_hash</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> AES</span><span style="color: #89DDFF">.</span><span style="color: #F07178">MODE_CBC</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    iv </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> cipher</span><span style="color: #89DDFF">.</span><span style="color: #F07178">iv</span></div><div class='line'><span style="color: #EEFFFF">    ciphertext </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> cipher</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">encrypt</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">pad</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">message</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> AES</span><span style="color: #89DDFF">.</span><span style="color: #F07178">block_size</span><span style="color: #89DDFF">))</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> iv</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">hex</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> ciphertext</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">hex</span><span style="color: #89DDFF">()</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">encrypted </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">encrypt</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">FLAG</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> key</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"Key: </span><span style="color: #82AAFF">&#123;key&#125;</span><span style="color: #C3E88D">"</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"Encrypted: </span><span style="color: #82AAFF">&#123;encrypted&#125;</span><span style="color: #C3E88D">"</span><span style="color: #89DDFF">)</span></div></code></div></pre>`,ns,q,nl="On observing the above code we can clearly see that:",Ps,B,Fl="<li>The function f satisfies a second-order linear differential equation: 2f” - 6f- + 3f = 0</li> <li>Encryption key is derived by evaluating function f at a key value (7-bits)</li> <li>This key is then hashed using SHA-256 to generate the AES key.</li>",Hs,R,ol="To decrypt the message, we need to just reverse the process, that’s to solve the differential equation with various initial conditions and regenerate the AES key.",Ms,Fs,ml=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> Crypto</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Cipher </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> AES</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> Crypto</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Util</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Padding </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> pad</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF">unpad</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> hashlib</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> sympy </span><span style="color: #89DDFF">as</span><span style="color: #EEFFFF"> sp</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> random</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> math</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> sympy </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> symbols</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> Function</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> Eq</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> dsolve</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> exp</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> Derivative</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">x </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> sp</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">symbols</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">x</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">e</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">math</span><span style="color: #89DDFF">.</span><span style="color: #F07178">e</span></div><div class='line'><span style="color: #EEFFFF">Key</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">60</span></div><div class='line'><span style="color: #EEFFFF">Encrypted</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">805534c14e694348a67da0d75165623cf603c2a98405b34fe3ba8752ce24f5040c39873ec2150a61591b233490449b8b7bedaf83aa9d4b57d6469cd3f78fdf55</span><span style="color: #89DDFF">'</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">iv_hex</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">Encrypted</span><span style="color: #89DDFF">[:</span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">]</span></div><div class='line'><span style="color: #EEFFFF">ct</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">Encrypted</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">:]</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">iv</span><span style="color: #89DDFF">=</span><span style="color: #FFCB6B">bytes</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">fromhex</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">iv_hex</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">c</span><span style="color: #89DDFF">=</span><span style="color: #FFCB6B">bytes</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">fromhex</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">ct</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">pos14</span><span style="color: #89DDFF">=[[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">12</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">4</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">4</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">6</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">8</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">6</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">6</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">12</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">6</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">8</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">6</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">8</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">4</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">6</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">12</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">12</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">12</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">6</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">12</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">12</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">4</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">6</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">8</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">12</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">]]</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">x </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">symbols</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">x</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">y </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">Function</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">y</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">)(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #546E7A"># Define the differential equation 2y''-6y'+3y=0</span></div><div class='line'><span style="color: #EEFFFF">differential_eq </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">Eq</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">*</span><span style="color: #82AAFF">y</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">diff</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> x</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">-</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">6</span><span style="color: #89DDFF">*</span><span style="color: #82AAFF">y</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">diff</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">+</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">*</span><span style="color: #82AAFF">y</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">for</span><span style="color: #EEFFFF"> i </span><span style="color: #89DDFF">in</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">range</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">pos14</span><span style="color: #89DDFF">)):</span></div><div class='line'><span style="color: #EEFFFF">   </span><span style="color: #546E7A"># Define initial conditions y(0) = y0 and y'(0) = y1</span></div><div class='line'><span style="color: #EEFFFF">   y0 </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> pos14</span><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">i</span><span style="color: #89DDFF">][</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">]</span><span style="color: #EEFFFF">  </span><span style="color: #546E7A"># Ey(x)</span></div><div class='line'><span style="color: #EEFFFF">   y1 </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> pos14</span><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">i</span><span style="color: #89DDFF">][</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">]</span><span style="color: #EEFFFF">  </span><span style="color: #546E7A"># y'(x)</span></div><div class='line'><span style="color: #EEFFFF">   initial_conditions </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #EEFFFF">y</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subs</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">):</span><span style="color: #EEFFFF"> y0</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> y</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">diff</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">subs</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">):</span><span style="color: #EEFFFF"> y1</span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">   </span><span style="color: #546E7A"># Solve the differential equation with initial conditions</span></div><div class='line'><span style="color: #EEFFFF">   solution </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">dsolve</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">differential_eq</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> y</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #EEFFFF">ics</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">initial_conditions</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">   f</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">solution</span><span style="color: #89DDFF">.</span><span style="color: #F07178">rhs</span></div><div class='line'><span style="color: #EEFFFF">   point </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> f</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subs</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> Key</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">evalf</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">   point_hash </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> hashlib</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sha256</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">point</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">encode</span><span style="color: #89DDFF">()).</span><span style="color: #82AAFF">digest</span><span style="color: #89DDFF">()[:</span><span style="color: #F78C6C">16</span><span style="color: #89DDFF">]</span></div><div class='line'><span style="color: #EEFFFF">   cipher </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> AES</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">new</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">point_hash</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> AES</span><span style="color: #89DDFF">.</span><span style="color: #F07178">MODE_CBC</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> iv</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">   flag </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> cipher</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">decrypt</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">c</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">   </span><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">b</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">AKASEC</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">in</span><span style="color: #EEFFFF"> flag</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">       </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">flag</span><span style="color: #89DDFF">)</span></div></code></div></pre>`,os,j,pl="We first define the differential Equation",Ss,ps,_l=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">y </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">Function</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">y</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">)(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">differential_eq </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">Eq</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">*</span><span style="color: #82AAFF">y</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">diff</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> x</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">-</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">6</span><span style="color: #89DDFF">*</span><span style="color: #82AAFF">y</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">diff</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">+</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">*</span><span style="color: #82AAFF">y</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">)</span></div></code></div></pre>`,es,$,el="Then iterate through all possible initial conditions, and every solution is evaluated and hashed at the key to derive the AES key.",qs,ts,hl=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">for</span><span style="color: #EEFFFF"> i </span><span style="color: #89DDFF">in</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">range</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">pos14</span><span style="color: #89DDFF">)):</span></div><div class='line'><span style="color: #EEFFFF">   y0 </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> pos14</span><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">i</span><span style="color: #89DDFF">][</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">]</span></div><div class='line'><span style="color: #EEFFFF">   y1 </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> pos14</span><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">i</span><span style="color: #89DDFF">][</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">]</span></div><div class='line'><span style="color: #EEFFFF">   initial_conditions </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #EEFFFF">y</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subs</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">):</span><span style="color: #EEFFFF"> y0</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> y</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">diff</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">subs</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">):</span><span style="color: #EEFFFF"> y1</span><span style="color: #89DDFF">&#125;</span><span style="color: #EEFFFF"> </span></div><div class='line'><span style="color: #EEFFFF">   solution </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">dsolve</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">differential_eq</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> y</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #EEFFFF">ics</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">initial_conditions</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #546E7A"># Solve Diff eq </span></div><div class='line'><span style="color: #EEFFFF">   f</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">solution</span><span style="color: #89DDFF">.</span><span style="color: #F07178">rhs</span></div><div class='line'><span style="color: #EEFFFF">   point </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> f</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subs</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> Key</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">evalf</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #546E7A">#evaluate</span></div><div class='line'><span style="color: #EEFFFF">   point_hash </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> hashlib</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sha256</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">point</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">encode</span><span style="color: #89DDFF">()).</span><span style="color: #82AAFF">digest</span><span style="color: #89DDFF">()[:</span><span style="color: #F78C6C">16</span><span style="color: #89DDFF">]</span><span style="color: #EEFFFF"> </span><span style="color: #546E7A">#hash</span></div></code></div></pre>`,cs,G,tl="This regenerated AES derived key and IV is used to decrypt the cipher text.",Bs,rs,xl=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">cipher </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> AES</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">new</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">point_hash</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> AES</span><span style="color: #89DDFF">.</span><span style="color: #F07178">MODE_CBC</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> iv</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">flag </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">unpad</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">cipher</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">decrypt</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">c</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> AES</span><span style="color: #89DDFF">.</span><span style="color: #F07178">block_size</span><span style="color: #89DDFF">)</span></div></code></div></pre>`,ys,K,cl="Flag: <code>AKASEC{d1d_y0u_3nj0y_c41cu1u5_101?}</code>",Rs,I,rl='visit <a href="https://urara-docs.netlify.app" rel="nofollow noopener noreferrer external" target="_blank">urara-docs.netlify.app</a>.';return{c(){c=p("p"),c.textContent=A,v=F(),y=p("h2"),y.innerHTML=r,D=F(),i=p("h3"),i.innerHTML=$s,is=F(),m=p("p"),m.textContent=Gs,Es=F(),O=new E(!1),U=F(),_=p("p"),_.innerHTML=Ks,ds=F(),W=new E(!1),Z=F(),h=p("p"),h.textContent=Is,vs=F(),N=new E(!1),V=F(),x=p("p"),x.textContent=zs,As=F(),b=p("p"),b.innerHTML=Os,Cs=F(),g=p("p"),g.innerHTML=Us,fs=F(),w=p("p"),w.innerHTML=Ws,us=F(),C=p("h3"),C.innerHTML=Zs,ms=F(),k=p("p"),k.textContent=Ns,_s=F(),f=p("h3"),f.innerHTML=Vs,hs=F(),T=p("p"),T.textContent=Js,xs=F(),J=new E(!1),Q=F(),L=p("p"),L.textContent=Qs,bs=F(),X=new E(!1),Y=F(),P=p("p"),P.innerHTML=Xs,gs=F(),ss=new E(!1),ls=F(),H=p("p"),H.textContent=Ys,ws=F(),M=p("p"),M.innerHTML=sl,ks=F(),u=p("h3"),u.innerHTML=ll,Ts=F(),S=p("p"),S.textContent=al,Ls=F(),as=new E(!1),ns=F(),q=p("p"),q.textContent=nl,Ps=F(),B=p("ul"),B.innerHTML=Fl,Hs=F(),R=p("p"),R.textContent=ol,Ms=F(),Fs=new E(!1),os=F(),j=p("p"),j.textContent=pl,Ss=F(),ps=new E(!1),es=F(),$=p("p"),$.textContent=el,qs=F(),ts=new E(!1),cs=F(),G=p("p"),G.textContent=tl,Bs=F(),rs=new E(!1),ys=F(),K=p("p"),K.innerHTML=cl,Rs=F(),I=p("p"),I.innerHTML=rl,this.h()},l(s){c=e(s,"P",{"data-svelte-h":!0}),t(c)!=="svelte-47jd1v"&&(c.textContent=A),v=o(s),y=e(s,"H2",{id:!0,"data-svelte-h":!0}),t(y)!=="svelte-wa5cyn"&&(y.innerHTML=r),D=o(s),i=e(s,"H3",{id:!0,"data-svelte-h":!0}),t(i)!=="svelte-yqweog"&&(i.innerHTML=$s),is=o(s),m=e(s,"P",{"data-svelte-h":!0}),t(m)!=="svelte-1c7kq8k"&&(m.textContent=Gs),Es=o(s),O=d(s,!1),U=o(s),_=e(s,"P",{"data-svelte-h":!0}),t(_)!=="svelte-12gy2jx"&&(_.innerHTML=Ks),ds=o(s),W=d(s,!1),Z=o(s),h=e(s,"P",{"data-svelte-h":!0}),t(h)!=="svelte-1gxiubc"&&(h.textContent=Is),vs=o(s),N=d(s,!1),V=o(s),x=e(s,"P",{"data-svelte-h":!0}),t(x)!=="svelte-1rnkgep"&&(x.textContent=zs),As=o(s),b=e(s,"P",{"data-svelte-h":!0}),t(b)!=="svelte-101tood"&&(b.innerHTML=Os),Cs=o(s),g=e(s,"P",{"data-svelte-h":!0}),t(g)!=="svelte-lfn3ol"&&(g.innerHTML=Us),fs=o(s),w=e(s,"P",{"data-svelte-h":!0}),t(w)!=="svelte-11jp7hr"&&(w.innerHTML=Ws),us=o(s),C=e(s,"H3",{id:!0,"data-svelte-h":!0}),t(C)!=="svelte-w9mjb8"&&(C.innerHTML=Zs),ms=o(s),k=e(s,"P",{"data-svelte-h":!0}),t(k)!=="svelte-9nci6w"&&(k.textContent=Ns),_s=o(s),f=e(s,"H3",{id:!0,"data-svelte-h":!0}),t(f)!=="svelte-oug0wg"&&(f.innerHTML=Vs),hs=o(s),T=e(s,"P",{"data-svelte-h":!0}),t(T)!=="svelte-1c7kq8k"&&(T.textContent=Js),xs=o(s),J=d(s,!1),Q=o(s),L=e(s,"P",{"data-svelte-h":!0}),t(L)!=="svelte-h1nrj4"&&(L.textContent=Qs),bs=o(s),X=d(s,!1),Y=o(s),P=e(s,"P",{"data-svelte-h":!0}),t(P)!=="svelte-7a2ica"&&(P.innerHTML=Xs),gs=o(s),ss=d(s,!1),ls=o(s),H=e(s,"P",{"data-svelte-h":!0}),t(H)!=="svelte-17iupm2"&&(H.textContent=Ys),ws=o(s),M=e(s,"P",{"data-svelte-h":!0}),t(M)!=="svelte-1cch9bp"&&(M.innerHTML=sl),ks=o(s),u=e(s,"H3",{id:!0,"data-svelte-h":!0}),t(u)!=="svelte-1excqrt"&&(u.innerHTML=ll),Ts=o(s),S=e(s,"P",{"data-svelte-h":!0}),t(S)!=="svelte-1c7kq8k"&&(S.textContent=al),Ls=o(s),as=d(s,!1),ns=o(s),q=e(s,"P",{"data-svelte-h":!0}),t(q)!=="svelte-1rhwiyn"&&(q.textContent=nl),Ps=o(s),B=e(s,"UL",{"data-svelte-h":!0}),t(B)!=="svelte-164us0m"&&(B.innerHTML=Fl),Hs=o(s),R=e(s,"P",{"data-svelte-h":!0}),t(R)!=="svelte-j3428z"&&(R.textContent=ol),Ms=o(s),Fs=d(s,!1),os=o(s),j=e(s,"P",{"data-svelte-h":!0}),t(j)!=="svelte-5apmfr"&&(j.textContent=pl),Ss=o(s),ps=d(s,!1),es=o(s),$=e(s,"P",{"data-svelte-h":!0}),t($)!=="svelte-hxtay4"&&($.textContent=el),qs=o(s),ts=d(s,!1),cs=o(s),G=e(s,"P",{"data-svelte-h":!0}),t(G)!=="svelte-1rzz1y1"&&(G.textContent=tl),Bs=o(s),rs=d(s,!1),ys=o(s),K=e(s,"P",{"data-svelte-h":!0}),t(K)!=="svelte-5tsqpy"&&(K.innerHTML=cl),Rs=o(s),I=e(s,"P",{"data-svelte-h":!0}),t(I)!=="svelte-zii0yf"&&(I.innerHTML=rl),this.h()},h(){Ds(y,"id","crypto"),Ds(i,"id","lost"),O.a=U,W.a=Z,N.a=V,Ds(C,"id","power-over-all"),Ds(f,"id","twin"),J.a=Q,X.a=Y,ss.a=ls,Ds(u,"id","my-calculus-lab"),as.a=ns,Fs.a=os,ps.a=es,ts.a=cs,rs.a=ys},m(s,l){a(s,c,l),a(s,v,l),a(s,y,l),a(s,D,l),a(s,i,l),a(s,is,l),a(s,m,l),a(s,Es,l),O.m(El,s,l),a(s,U,l),a(s,_,l),a(s,ds,l),W.m(dl,s,l),a(s,Z,l),a(s,h,l),a(s,vs,l),N.m(vl,s,l),a(s,V,l),a(s,x,l),a(s,As,l),a(s,b,l),a(s,Cs,l),a(s,g,l),a(s,fs,l),a(s,w,l),a(s,us,l),a(s,C,l),a(s,ms,l),a(s,k,l),a(s,_s,l),a(s,f,l),a(s,hs,l),a(s,T,l),a(s,xs,l),J.m(Al,s,l),a(s,Q,l),a(s,L,l),a(s,bs,l),X.m(Cl,s,l),a(s,Y,l),a(s,P,l),a(s,gs,l),ss.m(fl,s,l),a(s,ls,l),a(s,H,l),a(s,ws,l),a(s,M,l),a(s,ks,l),a(s,u,l),a(s,Ts,l),a(s,S,l),a(s,Ls,l),as.m(ul,s,l),a(s,ns,l),a(s,q,l),a(s,Ps,l),a(s,B,l),a(s,Hs,l),a(s,R,l),a(s,Ms,l),Fs.m(ml,s,l),a(s,os,l),a(s,j,l),a(s,Ss,l),ps.m(_l,s,l),a(s,es,l),a(s,$,l),a(s,qs,l),ts.m(hl,s,l),a(s,cs,l),a(s,G,l),a(s,Bs,l),rs.m(xl,s,l),a(s,ys,l),a(s,K,l),a(s,Rs,l),a(s,I,l)},p:gl,d(s){s&&(n(c),n(v),n(y),n(D),n(i),n(is),n(m),n(Es),O.d(),n(U),n(_),n(ds),W.d(),n(Z),n(h),n(vs),N.d(),n(V),n(x),n(As),n(b),n(Cs),n(g),n(fs),n(w),n(us),n(C),n(ms),n(k),n(_s),n(f),n(hs),n(T),n(xs),J.d(),n(Q),n(L),n(bs),X.d(),n(Y),n(P),n(gs),ss.d(),n(ls),n(H),n(ws),n(M),n(ks),n(u),n(Ts),n(S),n(Ls),as.d(),n(ns),n(q),n(Ps),n(B),n(Hs),n(R),n(Ms),Fs.d(),n(os),n(j),n(Ss),ps.d(),n(es),n($),n(qs),ts.d(),n(cs),n(G),n(Bs),rs.d(),n(ys),n(K),n(Rs),n(I))}}}function jl(z){let c,A;const v=[z[0],il];let y={$$slots:{default:[Rl]},$$scope:{ctx:z}};for(let r=0;r<v.length;r+=1)y=js(y,v[r]);return c=new ql({props:y}),{c(){Tl(c.$$.fragment)},l(r){Ll(c.$$.fragment,r)},m(r,D){Pl(c,r,D),A=!0},p(r,[D]){const i=D&1?Bl(v,[D&1&&Dl(r[0]),D&0&&Dl(il)]):{};D&2&&(i.$$scope={dirty:D,ctx:r}),c.$set(i)},i(r){A||(Hl(c.$$.fragment,r),A=!0)},o(r){Ml(c.$$.fragment,r),A=!1},d(r){Sl(c,r)}}}const il={title:"Akasec CTF 2024 writeup",image:"/blogs/akasec_CTF_2024/akasec1.png",alt:"AkasecCTF",created:"2024-6-11",tags:["CTF","Cryptography"],updated:"2024-06-24T16:35:38.677Z",images:[],slug:"/blogs/akasec_CTF_2024/+page.svelte.md",path:"/blogs/akasec_CTF_2024",toc:[{depth:2,title:"Crypto:",slug:"crypto"},{depth:3,title:"Lost",slug:"lost"},{depth:3,title:"Power Over All",slug:"power-over-all"},{depth:3,title:"Twin",slug:"twin"},{depth:3,title:"My Calculus Lab",slug:"my-calculus-lab"}]};function $l(z,c,A){return z.$$set=v=>{A(0,c=js(js({},c),yl(v)))},c=yl(c),[c]}class zl extends wl{constructor(c){super(),kl(this,c,$l,jl,bl,{})}}export{zl as component};
